{"ast":null,"code":"var _jsxFileName = \"/Users/manan/Desktop/podcast to speech/frontend/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport InputForm from './components/InputForm';\nimport ProcessingStatus from './components/ProcessingStatus';\nimport ResultDisplay from './components/ResultDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [processing, setProcessing] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('App component mounted');\n  }, []);\n  const handleSubmit = async url => {\n    console.log('handleSubmit called with URL:', url);\n    setProcessing(true);\n    setError(null);\n    try {\n      console.log('Attempting to fetch from /process');\n      const response = await fetch('http://127.0.0.1:8000/process', {\n        // Update to the full backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url\n        })\n      });\n      console.log('Fetch response status:', response.status);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Received data:', data);\n      setResult(data);\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n      setError(`An error occurred while processing the video: ${error.message}`);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"YouTube Transcriber and Summarizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), processing && /*#__PURE__*/_jsxDEV(ProcessingStatus, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I+G8bv0zp/bE825vcEmmYxNAuCU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","InputForm","ProcessingStatus","ResultDisplay","jsxDEV","_jsxDEV","App","_s","processing","setProcessing","result","setResult","error","setError","console","log","handleSubmit","url","response","fetch","method","headers","body","JSON","stringify","status","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/manan/Desktop/podcast to speech/frontend/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InputForm from './components/InputForm';\nimport ProcessingStatus from './components/ProcessingStatus';\nimport ResultDisplay from './components/ResultDisplay';\n\nfunction App() {\n  const [processing, setProcessing] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('App component mounted');\n  }, []);\n\n  const handleSubmit = async (url) => {\n    console.log('handleSubmit called with URL:', url);\n    setProcessing(true);\n    setError(null);\n    try {\n      console.log('Attempting to fetch from /process');\n      const response = await fetch('http://127.0.0.1:8000/process', { // Update to the full backend URL\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url }),\n      });\n      console.log('Fetch response status:', response.status);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Received data:', data);\n      setResult(data);\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n      setError(`An error occurred while processing the video: ${error.message}`);\n    } finally {\n      setProcessing(false);\n    }\n  };\n  \n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold mb-4\">YouTube Transcriber and Summarizer</h1>\n      <InputForm onSubmit={handleSubmit} />\n      {processing && <ProcessingStatus />}\n      {error && <div className=\"text-red-500 mt-4\">{error}</div>}\n      {result && <ResultDisplay result={result} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}